<!DOCTYPE html>
<html>
	<head>
		<meta charset = "utf-8" />
	</head>
	<body></body>
	<script>
		//question from kecek in folder GDP question 2

		function test(){
			//the thickness that i used in this solution is 1, because it generate the largest 
			//earn compare to any digit positive above 1;

			//var data = [7,9,0,0,3,1];
			var data = [17, 49, 50, 10, 33, 21, 1, 1];
			var price = 100, cut = 50, totalCut = 0, totalLeftOver = 0, total = 0, fixTotal = 0;
			var low = 1, anotherLow = 0;
			
			if(data.length <= 1000 && data.length >= 1){
				if(low >= 1 && low <= 10000 ){
					if((price >= 1 && price <= 100000000) && (cut >= 1 && cut <= 100000000)){	
						for(var i = 0; i < data.length; i++){
							if(data[i] !== low){
								totalCut = totalCut + sumMod(data[i], low);
							}else{
								anotherLow++;
							}
						}
						
						total = ((totalCut + anotherLow) * price) - (totalCut * cut);	
					}
				}
			}
			
			console.log(total);
		}

		function leftOver(digit = 0, lowest = 0){
			var tmp = digit, incre = 0;
			while(tmp >= lowest){
				tmp = tmp - lowest;
			}
			return incre;
		}

		function lowest(data){
			var tmp = data;
			var k = 0, i = 0, value = tmp[0];
			
			for(k = 0; k < tmp.length; k++){
				if(tmp[k] > 0){
					value = tmp[k];
					break;
				}
			}

			while(i < tmp.length){
				if((i + 1) < tmp.length){	
					if(tmp[i] <= tmp[i + 1]){
						if(tmp[i] < value && tmp[i] !== 0){	
							value = tmp[i];
						}	
					}else{
						if(tmp[i + 1] < value && tmp[i + 1] !== 0){
							value = tmp[i + 1];
						}
					}
				}
				i++;		
			}
			return value;
		}

		function sumMod(digit = 0, lowest = 0){
			var tmp = digit, incre = 0;
			while(tmp >= lowest){
				tmp = tmp - lowest;
				incre++;
			}
			
			return incre;
		}

		test();
		//console.log(sumMod(10, 10));

	</script>
</html>
